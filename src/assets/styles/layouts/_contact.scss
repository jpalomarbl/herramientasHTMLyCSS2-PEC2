@use "sass:map";

// This layer holds all of the positioning, spacing and sizing rules.
// This is the only layer used for screen sizes smaller than desktop.
@layer display {
  /* @define container-contact */
  // The main container for the contact page.
  .container-contact {
    container-type: inline-size;

    margin-top: 5dvh;
  }

  /* @define contact-form */
  .contact-form {
    display: flex;
    flex-direction: column;

    height: 80dvh;

    &__title { text-align: center; }

    // Every input-layer pair has its own container.
    &__container {
      display: flex;
      flex-direction: column;
      justify-content: start;

      padding-inline: 10vw;
      margin-block: 1dvh;
    }

    &__input {
      height: 2.5rem;

      &--textarea {
        height: 7rem;
      }
    }
  }

  @container (min-width: #{map.get($grid-breakpoints, "lg")}) {
    .contact-form {
      display: grid;
      grid-template-columns: [contact1] 1fr [contact2] 1fr [textarea] 4fr;
      grid-template-rows: [name] 1fr [email-phone1] 1fr [email-phone2] 1fr;

      height: 60dvh;

      // Every input-layer pair has its own container.
      &__container {
        display: flex;
        flex-direction: column;
        justify-content: center;

        margin: 0;
        padding-inline: 2vw;

        &--name {
          grid-column-start: contact1;
          grid-column-end: textarea;
        }

        &--email {
          grid-column-start: contact1;
          grid-column-end: contact2;
        }

        &--phone {
          grid-column-start: contact2;
          grid-column-end: textarea;
        }

        &--subject {
          grid-column-start: textarea;
          grid-column-end: textarea;
          grid-row-start: name;
          grid-row-end: name;
        }

        &--textarea {
          grid-column-start: textarea;
          grid-column-end: textarea;
          grid-row-start: email-phone1;
          grid-row-end: email-phone1;
        }

        &--button {
          grid-column-start: contact1;
          grid-column-end: text-area;
          grid-row-start: email-phone2;
          grid-row-end: email-phone2;
        }
      }

      &__input {
        &--textarea { height: 40%; }

        &--button {
          width: 30%;
          margin: auto !important;
        }
      }
    }
  }
}

// For desktop screen sizes we add a lot of flavour and coloring
// to the contact form page.
@container (min-width: #{map.get($grid-breakpoints, "lg")}) {
  // The theme layer holds the default colors, backgrounds and font configurations.
  // The effects layer sets hovers and animations.
  // The color-p3 layer overrides the default colors with color-p3 colors
  // only if the browser supports them.
  @layer theme, effects, colors-p3;

  @layer theme {
    .contact-form {
      &__container {
        &--name { background-color: map.get($theme-colors, "primary"); }

        &--email { background-color: map.get($theme-colors, "secondary"); }

        &--phone { background-color: map.get($theme-colors, "info"); }

        &--subject { background-color: map.get($theme-colors, "light"); }

        &--textarea { background-color: map.get($theme-colors, "dark"); }

        &--button {
          background-image: linear-gradient(
            90deg,
            map.get($theme-colors, "light") 0%,
            map.get($theme-colors, "primary") 25%,
            map.get($theme-colors, "secondary") 50%,
            map.get($theme-colors, "dark") 75%,
            map.get($theme-colors, "light") 100%
          );
        }
      }

      &__label {
        font-size: .8rem;
        font-weight: 500;
        color: map.get($theme-colors, "dark");

        &--textarea { color: map.get($theme-colors, "light"); }
      }

      &__input {
        color: map.get($theme-colors, "dark");

        border: none;
        border-radius: 2px;

        &--phone {
          border-style: solid;
          border-color: map.get($theme-colors, "light");
        }

        &--button { box-shadow: 3px 4px 13px -1px map.get($theme-colors, "dark"); }
      }
    }
  }

  @layer colors-p3 {
    @supports(background-color: color(display-p3 0 0 .47)) {
      .contact-form {
        &__container {
          &--name { background-color: map.get($theme-colors-p3, "primary"); }

          &--email { background-color: map.get($theme-colors-p3, "secondary"); }

          &--phone { background-color: map.get($theme-colors-p3, "info"); }

          &--subject { background-color: map.get($theme-colors-p3, "light"); }

          &--textarea { background-color: map.get($theme-colors-p3, "dark"); }

          &--button {
            background-image: linear-gradient(
              90deg,
              map.get($theme-colors-p3, "light") 0%,
              map.get($theme-colors-p3, "primary") 25%,
              map.get($theme-colors-p3, "secondary") 50%,
              map.get($theme-colors-p3, "dark") 75%,
              map.get($theme-colors-p3, "light") 100%
            );
          }
        }

        &__label {
          color: map.get($theme-colors-p3, "dark");

          &--textarea { color: map.get($theme-colors-p3, "light"); }
        }

        &__input {
          color: map.get($theme-colors-p3, "dark");

          &--phone { border-color: map.get($theme-colors-p3, "light"); }

          &--button { box-shadow: 3px 4px 13px -1px map.get($theme-colors-p3, "dark"); }
        }
      }
    }
  }

  @layer effects {
    .contact-form {
      &__container:hover > &__label {
        font-size: 1rem;

        transition: font-size .2s ease-in-out;
      }

      &__container {
        &--button:hover { animation: slidebg 15s linear infinite; }

        &--button:hover > .contact-form__input--button {
          transform: scale(1.05);

          transition: transform .2s ease-in-out;
        }
      }
    }

    // The gradient background sliding animation for the button.
    @keyframes slidebg {
      to { background-position:200vw; }
    }
  }
}
